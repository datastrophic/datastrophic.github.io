<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cassandra on datastrophic</title>
    <link>https://datastrophic.io/tags/cassandra/</link>
    <description>Recent content in cassandra on datastrophic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Sep 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://datastrophic.io/tags/cassandra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data processing platforms architectures with SMACK: Spark, Mesos, Akka, Cassandra and Kafka</title>
      <link>https://datastrophic.io/data-processing-platforms-architectures-with-spark-mesos-akka-cassandra-and-kafka/</link>
      <pubDate>Wed, 16 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://datastrophic.io/data-processing-platforms-architectures-with-spark-mesos-akka-cassandra-and-kafka/</guid>
      <description>This post is a follow-up of the talk given at Big Data AW meetup in Stockholm and focused on different use cases and design approaches for building scalable data processing platforms with SMACK(Spark, Mesos, Akka, Cassandra, Kafka) stack. While stack is really concise and consists of only several components it is possible to implement different system designs which list not only purely batch or stream processing, but more complex Lambda and Kappa architectures as well.</description>
    </item>
    
    <item>
      <title>Cassandra 2.1 Counters: Testing Consistency During Node Failures</title>
      <link>https://datastrophic.io/evaluating-cassandra-2-1-counters-consistency/</link>
      <pubDate>Thu, 03 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://datastrophic.io/evaluating-cassandra-2-1-counters-consistency/</guid>
      <description>For some cases such as the ones present in AdServing, the counters come really handy to accumulate totals for events coming into a system compared to batch aggregates. While distributed counters consistency is a well-known problem Cassandra counters in version 2.1 are claimed to be more accurate compared to the prior ones. This post describes the approach and the results of Cassandra counters consistency testing in different failure scenarios such as rolling restarts, abnormal termination of nodes, and network splits.</description>
    </item>
    
  </channel>
</rss>
