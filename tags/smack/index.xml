<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SMACK on datastrophic</title><link>https://datastrophic.io/tags/smack/</link><description>Recent content in SMACK on datastrophic</description><generator>Hugo</generator><language>en</language><copyright>Â© 2025 datastrophic</copyright><lastBuildDate>Wed, 16 Sep 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://datastrophic.io/tags/smack/index.xml" rel="self" type="application/rss+xml"/><item><title>Data processing platforms architectures with SMACK: Spark, Mesos, Akka, Cassandra and Kafka</title><link>https://datastrophic.io/data-processing-platforms-architectures-with-spark-mesos-akka-cassandra-and-kafka/</link><pubDate>Wed, 16 Sep 2015 00:00:00 +0000</pubDate><guid>https://datastrophic.io/data-processing-platforms-architectures-with-spark-mesos-akka-cassandra-and-kafka/</guid><description>This post is a follow-up of the talk given at Big Data AW meetup in Stockholm and focused on different use cases and design approaches for building scalable data processing platforms with SMACK(Spark, Mesos, Akka, Cassandra, Kafka) stack. While stack is really concise and consists of only several components it is possible to implement different system designs which list not only purely batch or stream processing, but more complex Lambda and Kappa architectures as well.</description></item></channel></rss>